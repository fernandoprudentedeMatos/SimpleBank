// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleBank.API.Infrastructure;

namespace SimpleBank.API.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20190114002657_SimpleBankInitialMigration")]
    partial class SimpleBankInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleBank.API.DomainModel.Account", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Balance");

                    b.Property<DateTime>("DateCreated");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("SimpleBank.API.DomainModel.TransferMoneyOperation", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountDestinyId");

                    b.Property<string>("AccountSourceId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AccountDestinyId");

                    b.HasIndex("AccountSourceId");

                    b.ToTable("TransferMoneyOperations");
                });

            modelBuilder.Entity("SimpleBank.API.DomainModel.TransferMoneyOperation", b =>
                {
                    b.HasOne("SimpleBank.API.DomainModel.Account", "AccountDestiny")
                        .WithMany()
                        .HasForeignKey("AccountDestinyId");

                    b.HasOne("SimpleBank.API.DomainModel.Account", "AccountSource")
                        .WithMany()
                        .HasForeignKey("AccountSourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
